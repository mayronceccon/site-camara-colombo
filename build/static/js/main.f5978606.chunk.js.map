{"version":3,"sources":["serviceWorker.js","components/MenuBar.js","components/MensagemHome.js","pages/Home.js","pages/Sobre.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","MenuExampleStackable","state","handleItemClick","e","_ref","name","_this","setState","activeItem","this","react_default","a","createElement","Menu","stackable","Item","src","alt","to","as","Link","active","onClick","Component","MediaCard","props","Home","className","MensagemHome","Sobre","activeIndex","handleClick","titleProps","index","newIndex","Accordion","fluid","styled","Title","Icon","Content","target","rel","href","App","MenuBar_MenuExampleStackable","Switch","Route","exact","path","component","Redirect","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2ICdeC,6MACnBC,MAAQ,KAERC,gBAAkB,SAACC,EAADC,GAAA,IAAMC,EAAND,EAAMC,KAAN,OAAiBC,EAAKC,SAAS,CAAEC,WAAYH,6EAEtD,IACCG,EAAeC,KAAKR,MAApBO,WAER,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,GACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,KACEL,EAAAC,EAAAC,cAAA,OACEI,IAAI,qBACJC,IAAI,+CAIRP,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CACEG,GAAG,IACHC,GAAIC,IACJf,KAAK,OACLgB,OAAuB,SAAfb,EACRc,QAASb,KAAKP,iBALhB,QAoBAQ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CACEG,GAAG,SACHC,GAAIC,IACJf,KAAK,QACLgB,OAAuB,UAAfb,EACRc,QAASb,KAAKP,iBALhB,iBArC0CqB,wCCOnCC,MATf,SAAmBC,GACjB,OACEf,EAAAC,EAAAC,cAAA,aCWWc,mLAVX,OACEhB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACbjB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACgB,EAAD,cALWL,+BC4DJM,6MA3Db5B,MAAQ,CAAE6B,YAAa,KAEvBC,YAAc,SAAC5B,EAAG6B,GAAe,IACvBC,EAAUD,EAAVC,MAEFC,EADkB5B,EAAKL,MAArB6B,cACyBG,GAAS,EAAIA,EAE9C3B,EAAKC,SAAS,CAAEuB,YAAaI,6EAGtB,IACCJ,EAAgBrB,KAAKR,MAArB6B,YACR,OACEpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAWC,OAAK,EAACC,QAAM,GACrB3B,EAAAC,EAAAC,cAACuB,EAAA,EAAUG,MAAX,CAAiBjB,OAAwB,IAAhBS,EAAmBG,MAAO,EAAGX,QAASb,KAAKsB,aAClErB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMlC,KAAK,aADb,eAIAK,EAAAC,EAAAC,cAACuB,EAAA,EAAUK,QAAX,CAAmBnB,OAAwB,IAAhBS,GACzBpB,EAAAC,EAAAC,cAAA,gBACMF,EAAAC,EAAAC,cAAA,2BADN,kDAKFF,EAAAC,EAAAC,cAACuB,EAAA,EAAUG,MAAX,CAAiBjB,OAAwB,IAAhBS,EAAmBG,MAAO,EAAGX,QAASb,KAAKsB,aAClErB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMlC,KAAK,aADb,cAIAK,EAAAC,EAAAC,cAACuB,EAAA,EAAUK,QAAX,CAAmBnB,OAAwB,IAAhBS,GACzBpB,EAAAC,EAAAC,cAAA,iGAEEF,EAAAC,EAAAC,cAAA,KACE6B,OAAO,SACPC,IAAI,sBACJC,KAAK,kCAHP,kCAFF,MAWFjC,EAAAC,EAAAC,cAACuB,EAAA,EAAUG,MAAX,CAAiBjB,OAAwB,IAAhBS,EAAmBG,MAAO,EAAGX,QAASb,KAAKsB,aAClErB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMlC,KAAK,aADb,qBAIAK,EAAAC,EAAAC,cAACuB,EAAA,EAAUK,QAAX,CAAmBnB,OAAwB,IAAhBS,GACzBpB,EAAAC,EAAAC,cAAA,8LAjDQW,aCyBLqB,mLAbX,OACElC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjChB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWrB,IAChCnB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUjC,GAAG,eARLK,oBCLlB6B,IAASC,OACL3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC2C,EAAD,OAEFC,SAASC,eAAe,SNqHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f5978606.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nexport default class MenuExampleStackable extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu stackable>\n        <Menu.Item>\n          <img \n            src='/images/brasao.png' \n            alt=\"BrasÃ£o Prefeitura Municipal de Colombo\"\n          />\n        </Menu.Item>\n\n        <Menu.Item\n          to='/'\n          as={Link}\n          name='home'\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n        >\n          Home\n        </Menu.Item>\n\n        {/* <Menu.Item\n          to='/pautas'\n          as={Link}\n          name='pautas'\n          active={activeItem === 'pautas'}\n          onClick={this.handleItemClick}\n        >\n          Pautas\n        </Menu.Item> */}\n\n        <Menu.Item \n          to='/sobre'\n          as={Link}\n          name='sobre' \n          active={activeItem === 'sobre'} \n          onClick={this.handleItemClick}>\n          Sobre\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}","import React from 'react';\n\nfunction MediaCard(props) {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\n\nexport default MediaCard;\n","import React, { Component } from 'react';\nimport MensagemHome from './../components/MensagemHome';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Home</h1>\n        <MensagemHome>\n        </MensagemHome>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Accordion, Icon } from 'semantic-ui-react'\n\nclass Sobre extends Component {\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n    return (\n      <div>\n        <h1>Sobre</h1>\n\n        <Accordion fluid styled>\n          <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\n            <Icon name='dropdown' />\n            O que Ã©?\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            <p>\n              App <b>NÃO OFICIAL</b> dos dados da CÃ¢mara Municipal de Colombo.\n            </p>\n          </Accordion.Content>\n\n          <Accordion.Title active={activeIndex === 1} index={1} onClick={this.handleClick}>\n            <Icon name='dropdown' />\n            PorquÃª?\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <p>\n              Desenvolvido para facilitar a consulta das informaÃ§Ãµes disponibilizadas no site \n              <a \n                target=\"_blank\" \n                rel=\"noopener noreferrer\" \n                href=\"http://camaracolombo.pr.gov.br\">\n                http://camaracolombo.pr.gov.br\n                </a>.\n            </p>\n          </Accordion.Content>\n\n          <Accordion.Title active={activeIndex === 2} index={2} onClick={this.handleClick}>\n            <Icon name='dropdown' />\n            Responsabilidades\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <p>\n              NÃ£o temos responsabilidades pelos dados, somente divulgamos, qualquer divergÃªncia encontrada entrar em contato diretamente\n              com a Prefeitura Municipal de Colombo.\n            </p>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default Sobre;","import React, { Component } from 'react';\nimport './App.css';\nimport MenuBar from './components/MenuBar';\n\nimport { \n  Route, \n  Switch,\n  Redirect\n} from 'react-router-dom'\n\nimport Home from './pages/Home';\nimport Sobre from './pages/Sobre';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar></MenuBar>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/sobre\" component={Sobre}/>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </ BrowserRouter>\n    , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}